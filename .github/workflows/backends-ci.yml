jobs:
  build:
    name: build
    needs:
      - install
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: checkout
        uses: actions/checkout@v1
        with:
          lfs: true
      - id: npm-cache-backends
        name: fetch node modules in backends
        uses: actions/cache@v1
        with:
          key: '${{ runner.os }}-npm-${{ hashFiles(''backends/package-lock.json'') }}'
          path: backends/node_modules
      - id: npm-install-backends
        if: steps.npm-cache-backends.outputs.cache-hit != 'true'
        name: install node modules in backends
        run: npm ci
        working-directory: backends
      - id: nest-build
        name: Run nest build
        run: npm run build
        working-directory: backends
  check-generated-files:
    name: Check generated files
    needs:
      - install
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: checkout
        uses: actions/checkout@v1
        with:
          lfs: true
      - id: npm-cache-backends
        name: fetch node modules in backends
        uses: actions/cache@v1
        with:
          key: '${{ runner.os }}-npm-${{ hashFiles(''backends/package-lock.json'') }}'
          path: backends/node_modules
      - id: npm-install-backends
        if: steps.npm-cache-backends.outputs.cache-hit != 'true'
        name: install node modules in backends
        run: npm ci
        working-directory: backends
      - id: backends-ci
        name: Regenerate backends-ci.yml
        run: 'npm run pipeline:update'
        working-directory: backends
      - id: check-regenerated-files
        name: Check regenerated files
        run: git --no-pager diff --exit-code
        working-directory: backends
  install:
    name: Install node modules
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: checkout
        uses: actions/checkout@v1
        with:
          lfs: true
      - id: npm-cache-backends
        name: fetch node modules in backends
        uses: actions/cache@v1
        with:
          key: '${{ runner.os }}-npm-${{ hashFiles(''backends/package-lock.json'') }}'
          path: backends/node_modules
      - id: npm-install-backends
        if: steps.npm-cache-backends.outputs.cache-hit != 'true'
        name: install node modules in backends
        run: npm ci
        working-directory: backends
  lint:
    name: Linting
    needs:
      - install
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: checkout
        uses: actions/checkout@v1
        with:
          lfs: true
      - id: npm-cache-backends
        name: fetch node modules in backends
        uses: actions/cache@v1
        with:
          key: '${{ runner.os }}-npm-${{ hashFiles(''backends/package-lock.json'') }}'
          path: backends/node_modules
      - id: npm-install-backends
        if: steps.npm-cache-backends.outputs.cache-hit != 'true'
        name: install node modules in backends
        run: npm ci
        working-directory: backends
      - id: eslint
        name: Check ESlint
        run: 'npm run lint:ts'
        working-directory: backends
      - id: tscheck
        if: always()
        name: Check Typescripe
        run: 'npm run lint:ts:types'
        working-directory: backends
      - id: prettier
        if: always()
        name: Check Prettier
        run: npm run format
        working-directory: backends
name: backends
'on':
  push:
    paths:
      - backends/**
      - .github/workflows/backends-ci.yml
