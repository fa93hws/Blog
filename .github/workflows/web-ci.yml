name: web

on: [push]

jobs:
  install:
    name: Install Node Modules
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: web/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('web/package-lock.json') }}
      - name: Install node modules
        working-directory: web
        run: npm ci

  lint:
    name: Linting
    runs-on: ubuntu-latest
    needs: install

    steps:
      - uses: actions/checkout@v1
      - name: Download node modules
        uses: actions/cache@v1
        with:
          path: web/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('web/package-lock.json') }}
      - name: Check ESLint
        working-directory: web
        run: npm run lint:ts
      - name: Check typescript
        if: always()
        working-directory: web
        run: npm run lint:ts:types
      - name: Check prettier
        if: always()
        working-directory: web
        run: npm run format

  test:
    name: Unit test
    runs-on: ubuntu-latest
    needs: install

    steps:
      - uses: actions/checkout@v1
      - name: Download node modules
        uses: actions/cache@v1
        with:
          path: web/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('web/package-lock.json') }}
      - name: Run Unit test
        working-directory: web
        run: npm run test -- --ci

  build:
    name: Build(webpack)
    runs-on: ubuntu-latest
    needs: install

    steps:
      - uses: actions/checkout@v1
      - name: Download node modules
        uses: actions/cache@v1
        with:
          path: web/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('web/package-lock.json') }}
      - name: Run webpack build
        env:
          CI: true
          DEBUG: "webpack_options"
        working-directory: web
        run: npm run build
      - name: Run storybook build
        working-directory: web
        run: npm run storybook:build
      - name: Run percy on storybook
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
        working-directory: web
        run: npm run percy:storybook
