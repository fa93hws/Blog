jobs:
  install:
    name: Install node modules
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: checkout
        uses: actions/checkout@v1
      - id: cache-npm
        name: fetch node modules
        uses: actions/cache@v1
        with:
          key: '${{ runner.os }}-npm-${{ hashFiles(''web/package-lock.json'') }}'
          path: web/node_modules
      - id: npm-ci
        name: install node modules
        run: npm ci
        working-directory: web
  lint:
    name: Linting
    needs:
      - install
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: checkout
        uses: actions/checkout@v1
      - id: cache-npm
        name: fetch node modules
        uses: actions/cache@v1
        with:
          key: '${{ runner.os }}-npm-${{ hashFiles(''web/package-lock.json'') }}'
          path: web/node_modules
      - id: npm-ci
        if: steps.cache-npm.outputs.cache-hit != 'true'
        name: install node modules
        run: npm ci
        working-directory: web
      - id: eslint
        name: Check ESlint
        run: 'npm run lint:ts'
        working-directory: web
      - id: tscheck
        if: always()
        name: Check Typescripe
        run: 'npm run lint:ts:types'
        working-directory: web
      - id: prettier
        if: always()
        name: Check Prettier
        run: npm run format
        working-directory: web
  storybook:
    name: storybook
    needs:
      - install
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: checkout
        uses: actions/checkout@v1
      - id: cache-npm
        name: fetch node modules
        uses: actions/cache@v1
        with:
          key: '${{ runner.os }}-npm-${{ hashFiles(''web/package-lock.json'') }}'
          path: web/node_modules
      - id: npm-ci
        if: steps.cache-npm.outputs.cache-hit != 'true'
        name: install node modules
        run: npm ci
        working-directory: web
      - id: storybook
        name: Run storybook build
        run: 'npm run storybook:build'
        working-directory: web
      - env:
          PERCY_TOKEN: '${{ secrets.PERCY_TOKEN }}'
        id: percy-storybook
        name: Run percy on storybook
        run: 'npm run percy:storybook'
        working-directory: web
  unit-test:
    name: Unit test
    needs:
      - install
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: checkout
        uses: actions/checkout@v1
      - id: cache-npm
        name: fetch node modules
        uses: actions/cache@v1
        with:
          key: '${{ runner.os }}-npm-${{ hashFiles(''web/package-lock.json'') }}'
          path: web/node_modules
      - id: npm-ci
        if: steps.cache-npm.outputs.cache-hit != 'true'
        name: install node modules
        run: npm ci
        working-directory: web
      - id: jest
        name: Run unit test
        run: npm run test
        working-directory: web
  webpack:
    name: webpack
    needs:
      - install
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: checkout
        uses: actions/checkout@v1
      - id: cache-npm
        name: fetch node modules
        uses: actions/cache@v1
        with:
          key: '${{ runner.os }}-npm-${{ hashFiles(''web/package-lock.json'') }}'
          path: web/node_modules
      - id: npm-ci
        if: steps.cache-npm.outputs.cache-hit != 'true'
        name: install node modules
        run: npm ci
        working-directory: web
      - env:
          CI: 'true'
          DEBUG: webpack_options
        id: webpack
        name: Run webpack build
        run: npm run build
        working-directory: web
name: web
'on':
  - push
